// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mongodb"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id              String           @id @default(auto()) @map("_id") @db.ObjectId
  role            String?          @default("STUDENT") @db.String
  username        String           @unique
  email           String           @unique
  password        String
  name            String?
  lessons         Lesson[]
  // sessions                  Session[]
  tutorName       String
  //collection id or something? idk
  knowledgePoints knowledgePoint[]

  @@map("users")
}

model knowledgePoint {
  id              String   @id @map("_id") @db.ObjectId
  uid             User     @relation(fields: [userId], references: [id])
  userId          String   @map("_userId") @db.ObjectId
  lessonId        String   @map("_lessonId") @db.ObjectId
  pointInSolitude String   @map("_pointInSolitude")
  pointInChain    String   @map("_pointInChain")
  TwoDCoOrdinates String[]
  confidence      Int
}

model Lesson {
  id                  String    @id @default(auto()) @map("_id") @db.ObjectId
  subject             String
  messages            Message[] @relation("LessonToMessage")
  //threads is a 2D array of current knowledge to teach !!! CHANGE: this is not included anymore as lessons will be saved at the end of the session so threads isn't needed
  // threads             Message[] @relation("ThreadsToMessage")
  beganAt             DateTime  @default(now())
  updatedAt           DateTime  @default(now())
  lessonStatus        String    @default("Active")
  user                User      @relation(fields: [userId], references: [id])
  userId              String    @db.ObjectId
  //an array of knowledge point IDs
  knowledgePointChain String[]

  @@map("lessons")
}

model Message {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  role    String
  rk      String[]
  content String

  lesson   Lesson @relation("LessonToMessage", fields: [lessonId], references: [id])
  lessonId String @db.ObjectId

  @@map("messages")
}

model Tip {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  title   String
  content String
  link    String

  @@map("tips")
}

import NewButton from '@/components/ui/NewButton'
import { messagesSchema } from '@/lib/validation/primitives'
import { roleType } from '@/lib/validation/transfer/transferSchemas'
import { Loader2 } from 'lucide-react'
import React from 'react'
import { z } from 'zod'

function MessagePrimitive({ dispatch, messages, focused, lastMessageInLesson, username, loadingNextMsg }: { dispatch: (action: "reply" | "understood") => Promise<null | undefined>, messages: z.infer<typeof messagesSchema>[], focused: boolean, lastMessageInLesson: boolean, username?: string, loadingNextMsg: boolean }) {
    const {
        role, content, eliResponseType
    } = messages[0];
    return (
        <div className={`animate-in slide-in-from-bottom-4  w-full border-b-[rgba(0,0,0,0.05)] border-b pl-16 pr-24 pt-[0.938rem] pb-[1.25rem] items-start flex flex-row gap-4 ${eliResponseType == "WhatComesToMind" && focused ? "bg-[#461167] text-white" : ""}`}>
            <div className="grid place-items-center w-12 aspect-square rounded-full border border-[rgba(0,0,0,0.1)]">
                {
                    role == "user" ? <h2>{username ? username[0] : "U"}</h2> : eliResponseType == "General" || eliResponseType == "WhatComesToMind" ?
                        <svg width="29" height="28" viewBox="0 0 29 28" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <rect x="1" y="0.5" width="27" height="27" rx="13.5" />
                            <path d="M13.1248 16.3334C13.0653 16.1027 12.945 15.8922 12.7765 15.7237C12.6081 15.5552 12.3975 15.4349 12.1668 15.3754L8.07679 14.3208C8.00701 14.3009 7.9456 14.2589 7.90186 14.201C7.85813 14.1432 7.83447 14.0726 7.83447 14.0001C7.83447 13.9275 7.85813 13.857 7.90186 13.7991C7.9456 13.7413 8.00701 13.6992 8.07679 13.6794L12.1668 12.6241C12.3974 12.5646 12.6079 12.4445 12.7764 12.2761C12.9449 12.1078 13.0652 11.8973 13.1248 11.6668L14.1795 7.57675C14.1991 7.5067 14.241 7.44498 14.299 7.40101C14.357 7.35705 14.4277 7.33325 14.5005 7.33325C14.5732 7.33325 14.644 7.35705 14.7019 7.40101C14.7599 7.44498 14.8019 7.5067 14.8215 7.57675L15.8755 11.6668C15.935 11.8975 16.0552 12.108 16.2237 12.2765C16.3922 12.445 16.6027 12.5652 16.8335 12.6248L20.9235 13.6788C20.9938 13.6982 21.0558 13.7401 21.1 13.7981C21.1442 13.8562 21.1682 13.9271 21.1682 14.0001C21.1682 14.073 21.1442 14.144 21.1 14.202C21.0558 14.2601 20.9938 14.302 20.9235 14.3214L16.8335 15.3754C16.6027 15.4349 16.3922 15.5552 16.2237 15.7237C16.0552 15.8922 15.935 16.1027 15.8755 16.3334L14.8208 20.4234C14.8012 20.4935 14.7592 20.5552 14.7012 20.5992C14.6433 20.6431 14.5725 20.6669 14.4998 20.6669C14.427 20.6669 14.3563 20.6431 14.2983 20.5992C14.2404 20.5552 14.1984 20.4935 14.1788 20.4234L13.1248 16.3334Z" fill="#438BCE" />
                            <path d="M19.8335 8V10.6667" stroke="#438BCE" strokeLinecap="round" strokeLinejoin="round" />
                            <path d="M21.1667 9.33325H18.5" stroke="#438BCE" strokeLinecap="round" strokeLinejoin="round" />
                            <path d="M9.1665 17.3333V18.6666" stroke="#438BCE" strokeLinecap="round" strokeLinejoin="round" />
                            <path d="M9.83333 18H8.5" stroke="#438BCE" strokeLinecap="round" strokeLinejoin="round" />
                        </svg>
                        :
                        // eliresponsetype is system
                        <svg width="45" height="26" viewBox="0 0 45 26" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <g clip-path="url(#clip0_2445_6761)">
                                <path d="M28.9744 21.5064L28.9745 21.5062C26.9382 20.4636 25.455 18.9115 24.5152 16.8632C23.8291 15.3678 23.5298 13.7888 23.7048 12.1283C23.7175 12.0073 23.7176 11.8997 23.7176 11.7678C23.7176 11.7 23.7177 11.6259 23.7194 11.5402C23.7152 11.5358 23.7091 11.53 23.7006 11.5227C23.683 11.5076 23.6591 11.4897 23.6256 11.4674L23.9025 11.0511L23.6256 11.4674C23.3873 11.3089 22.9594 11.2026 22.473 11.2068C21.9866 11.2109 21.56 11.3244 21.3248 11.4852C21.3028 11.5002 21.2894 11.5117 21.2816 11.5192C21.3497 12.0412 21.3704 12.562 21.3575 13.0798C21.281 16.1422 20.0058 18.6387 17.5975 20.5165C15.7331 21.9702 13.561 22.6273 11.209 22.4342C7.99838 22.1707 5.52417 20.5907 3.82362 17.886C2.96656 16.5228 2.48334 15.0281 2.35672 13.4271C2.3454 13.284 2.29946 13.2146 2.25273 13.1729C2.19862 13.1247 2.08864 13.0663 1.87543 13.0485C1.79026 13.0413 1.70032 13.0347 1.6077 13.0278C1.40395 13.0127 1.1872 12.9966 0.979711 12.9725C0.618915 12.9306 0.288901 12.79 0.0334949 12.5457C-0.222725 12.3007 -0.37751 11.9763 -0.428212 11.6136C-0.532766 10.8654 -0.500645 10.1177 -0.470964 9.42681L-0.469591 9.39484C-0.452311 8.99214 -0.289299 8.6371 -0.00435184 8.38524C0.276099 8.13735 0.641407 8.01805 1.02187 8.0139C1.88564 8.00449 2.75155 8.00184 3.61818 8.01368C3.66357 8.0143 3.68603 8.01049 3.69461 8.0084C3.70116 8.00237 3.71626 7.98622 3.73945 7.94997C5.22582 5.62728 7.31962 4.11979 10.0957 3.6515C13.9011 3.00959 17.677 4.40347 19.9327 7.95371C20.0839 8.19174 20.2289 8.44157 20.3769 8.69713C21.7863 8.0782 23.2238 8.08164 24.6335 8.71086C25.8348 6.47549 27.5895 4.80947 30.0755 3.98969C31.51 3.51666 32.9826 3.39099 34.4861 3.59418C37.395 3.9873 39.6099 5.4663 41.2135 7.85216M28.9744 21.5064L41.2135 7.85216M28.9744 21.5064L28.9857 21.5118C31.2801 22.6152 33.6801 22.8286 36.0616 21.9796C38.0155 21.2829 39.5453 20.2068 40.6468 18.7747C41.747 17.3442 42.3989 15.5859 42.6417 13.5557C42.6709 13.3116 42.7168 13.234 42.7413 13.2052C42.7585 13.1851 42.8123 13.1324 43.0317 13.0899C43.3026 13.0375 43.5838 13.0103 43.8908 12.9816C44.3462 12.939 44.7631 12.7869 45.065 12.4655C45.3683 12.1426 45.4918 11.7166 45.4964 11.2566C45.5011 10.782 45.5002 10.3074 45.4992 9.83628C45.4991 9.7662 45.499 9.6962 45.4988 9.62629C45.4981 9.18023 45.3789 8.75773 45.072 8.44721C44.7645 8.13599 44.3431 8.01292 43.8962 8.01067C43.7266 8.00982 43.5558 8.0084 43.3839 8.00697C42.7622 8.0018 42.128 7.99654 41.4971 8.01765C41.3944 8.02108 41.3574 8.00324 41.3426 7.9949C41.3223 7.98342 41.2811 7.95278 41.2135 7.85216M28.9744 21.5064L40.7985 8.13107L41.2135 7.85216M7.07059 8.5513C7.32514 8.26192 7.61933 8.00652 7.94427 7.75228M7.07059 8.5513L7.94427 7.75228M7.07059 8.5513C5.34841 10.5091 4.94931 12.7358 5.83497 15.1092C6.32546 16.4236 7.04787 17.4439 7.98648 18.1599C8.92406 18.8751 10.1055 19.3082 11.5501 19.4045C13.1413 19.5105 14.5745 19.0721 15.7917 18.0816C17.6009 16.6092 18.4796 14.7442 18.2895 12.3971C18.1827 11.0792 17.7084 9.91989 16.8921 8.89333C15.7738 7.48687 14.3095 6.70832 12.5023 6.52924C10.8347 6.364 9.33319 6.74215 7.94427 7.75228M7.07059 8.5513L7.94427 7.75228M3.69087 8.01143C3.69087 8.01138 3.69143 8.01091 3.69256 8.0102C3.69143 8.01113 3.69087 8.01149 3.69087 8.01143ZM3.69737 8.00765C3.69833 8.00724 3.69887 8.00707 3.6989 8.00709L3.69737 8.00765ZM31.7883 6.61699C35.0486 5.92543 38.2332 7.7174 39.3045 10.8498C40.5849 14.8738 37.8178 18.6158 34.4809 19.2721C32.1476 19.731 30.1476 19.1466 28.5013 17.4189C27.138 15.9883 26.5747 14.2825 26.7352 12.3207C26.9733 9.40969 29.1158 7.18386 31.7883 6.61699ZM42.9263 10.4327C42.9319 10.4262 42.9418 10.4161 42.9583 10.4036L42.6544 10.0065L42.9583 10.4036C42.9603 10.402 42.962 10.4009 42.9635 10.4C42.9671 10.3977 42.9691 10.3972 42.9692 10.3972L42.9697 10.3972C42.97 10.3972 42.9723 10.3975 42.9764 10.3999C42.9806 10.4022 42.9879 10.4073 42.9967 10.4179C43.0006 10.4225 43.0033 10.4264 43.0051 10.4293C43.0012 10.4364 42.9925 10.4495 42.975 10.4666C42.9686 10.4728 42.9627 10.4781 42.9574 10.4825C42.9454 10.4761 42.9409 10.4717 42.9408 10.4716L42.9407 10.4715C42.94 10.4709 42.9389 10.4698 42.9368 10.4656C42.9346 10.4613 42.9303 10.4512 42.9263 10.4327ZM2.00715 10.4347C2.01524 10.4258 2.02614 10.4148 2.04057 10.4021C2.05074 10.4129 2.06358 10.429 2.07752 10.4525C2.07442 10.4721 2.07041 10.4837 2.06788 10.4895C2.06442 10.4913 2.05785 10.4942 2.04734 10.4972C2.04589 10.4955 2.04436 10.4935 2.04275 10.4914C2.03203 10.4775 2.01986 10.4587 2.00715 10.4347Z" fill="white" stroke="white" />
                            </g>
                            <defs>
                                <clipPath id="clip0_2445_6761">
                                    <rect width="45" height="26" fill="white" />
                                </clipPath>
                            </defs>
                        </svg>

                }
            </div>
            <div className="flex flex-col gap-3">
                <div className="flex flex-col gap-1">
                    <h2 className='font-normal opacity-70 flex flex-row gap-3'>
                        {
                            role == "user" ? "You" : eliResponseType == "General" || eliResponseType == "WhatComesToMind" ? "Eli" : "System"
                        }
                        {(eliResponseType == "WhatComesToMind" ? <div className={`${focused ? "text-white" : "text-[#461167]"} font-bold`}>- LEARNING WHAT YOU KNOW</div> : "")}
                    </h2>
                    <div className="flex flex-col gap-3">
                        {/* map the split responses */}
                        {
                            messages.map((message, index) => {
                                return (
                                    <h2 key={message.content + index} className={`${focused && index == messages.length - 1 ? 'font-bold' : 'opacity-50'}`}>{message.content}</h2>
                                )
                            })
                        }
                    </div>
                </div>
                {role == "eli" && focused && eliResponseType !== "WhatComesToMind" &&
                    <NewButton type="button" onClick={() => dispatch("understood")} disabled={loadingNextMsg} buttonVariant='black' className='px-[1.4rem] py-[0.9rem] w-max font-bold'>{
                        eliResponseType == "General" ? lastMessageInLesson ? "Finish lesson üèÅ (Enter)" : "I understand! (Enter)" : "SystemCTA"
                    }
                        {loadingNextMsg && <Loader2 className='w-4 h-4 animate-spin'></Loader2>}
                    </NewButton>
                }
            </div>
        </div>
    )
}

export default MessagePrimitive